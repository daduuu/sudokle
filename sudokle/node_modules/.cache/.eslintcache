[{"/Users/daviddu/Desktop/sudokle/sudokle/src/index.js":"1","/Users/daviddu/Desktop/sudokle/sudokle/src/reportWebVitals.js":"2","/Users/daviddu/Desktop/sudokle/sudokle/src/App.js":"3","/Users/daviddu/Desktop/sudokle/sudokle/src/Layout.js":"4","/Users/daviddu/Desktop/sudokle/sudokle/src/Home.js":"5","/Users/daviddu/Desktop/sudokle/sudokle/src/DailyLeaderBoard.js":"6","/Users/daviddu/Desktop/sudokle/sudokle/src/WeeklyLeaderboard.js":"7","/Users/daviddu/Desktop/sudokle/sudokle/src/SudokuGrid.js":"8","/Users/daviddu/Desktop/sudokle/sudokle/src/sudoku.js":"9","/Users/daviddu/Desktop/sudokle/sudokle/src/Splash.js":"10"},{"size":536,"mtime":1653914562175,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1653547220000,"results":"13","hashOfConfig":"12"},{"size":2761,"mtime":1653961191693,"results":"14","hashOfConfig":"12"},{"size":4605,"mtime":1653960930476,"results":"15","hashOfConfig":"12"},{"size":548,"mtime":1653917893070,"results":"16","hashOfConfig":"12"},{"size":1654,"mtime":1653547220000,"results":"17","hashOfConfig":"12"},{"size":1507,"mtime":1653961289422,"results":"18","hashOfConfig":"12"},{"size":6923,"mtime":1653959254304,"results":"19","hashOfConfig":"12"},{"size":4968,"mtime":1653961036387,"results":"20","hashOfConfig":"12"},{"size":847,"mtime":1653959143677,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"4k1sgy",{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"25"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"25"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"25"},"/Users/daviddu/Desktop/sudokle/sudokle/src/index.js",[],[],[],"/Users/daviddu/Desktop/sudokle/sudokle/src/reportWebVitals.js",[],[],"/Users/daviddu/Desktop/sudokle/sudokle/src/App.js",["56","57","58","59","60"],[],"/Users/daviddu/Desktop/sudokle/sudokle/src/Layout.js",["61"],[],"/Users/daviddu/Desktop/sudokle/sudokle/src/Home.js",[],[],"/Users/daviddu/Desktop/sudokle/sudokle/src/DailyLeaderBoard.js",["62","63","64","65","66","67","68","69"],[],"import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport ReactDOM from \"react-dom/client\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Layout from \"./Layout\";\nimport Home from \"./Home\"\nimport WeeklyLeaderboard from \"./WeeklyLeaderboard\";\n\n\nclass DailyLeaderBoard extends Component {\n  state = {\n    leaderBoardData: []\n  };\n\n  componentDidMount() {\n    this.fetchData()\n        .then(res => this.setState({\n          leaderBoardData: res\n        }))\n        //.then(res => console.log(res))\n        .catch(err => console.log(err));\n  }\n\n  fetchData = async () => {\n    const response = await fetch('/api/sudokleQueries/getLeaderboardInfo');\n    const body = response.json();\n    return body;\n  };\n\n  getRows(){\n    const rows = [];\n    var count = 1;\n    for(const user of this.state.leaderBoardData){\n      rows.push(<tr key={user.userID}><td>Rank: {count}</td><td>{user.userEmail}</td><td>{user.dailyPuzzleTimedSolved}</td></tr>)\n      count++;\n    }\n    return rows;\n  }\n\n  render() {\n    const rows = this.getRows();\n\n    return (\n        <div className=\"App\">\n          <header className=\"App-header\">\n\n            <h1>Daily Leaderboard</h1>\n                <table>\n                  <thead>\n                    <tr>\n                      <th>Rank</th>\n                      <th>Email</th>\n                      <th>Daily Time Solve</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {rows}\n                  </tbody>\n                </table>\n          </header>\n        </div>\n    );\n  }\n}\n\nexport default DailyLeaderBoard;\n","/Users/daviddu/Desktop/sudokle/sudokle/src/WeeklyLeaderboard.js",[],[],"/Users/daviddu/Desktop/sudokle/sudokle/src/SudokuGrid.js",["70","71","72","73","74"],[],"import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './SudokuGrid.css';\nimport classNames from 'classnames'\nimport {makePuzzle, pluck, printPuzzle} from \"./sudoku\";\nimport {Navigate} from 'react-router-dom';\n\nclass Grid extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            squares: [],\n            given: \"\",\n            valSpots: [],\n            sol: \"\",\n            solved: false,\n            time: {\n                h: 0,\n                m: 0,\n                s: 0\n            },\n            seconds: 0,\n            userEmail: \"\"\n        };\n        this.timer = 0;\n        this.startTimer = this.startTimer.bind(this);\n        this.countUp = this.countUp.bind(this);\n    }\n\n    secondsToTime(secs){\n        let hours = Math.floor(secs / (60 * 60));\n\n        let dm = secs % (60 * 60);\n        let minutes = Math.floor(dm / 60);\n\n        let ds = dm % 60;\n        let seconds = Math.ceil(ds);\n\n        let obj = {\n            h: hours,\n            m: minutes,\n            s: seconds\n        };\n        return obj;\n    }\n\n    startTimer() {\n        if (this.timer === 0) {\n            this.timer = setInterval(this.countUp, 1000);\n        }\n    }\n\n    countUp() {\n        let seconds = this.state.seconds + 1;\n\n        this.setState({\n            time: this.secondsToTime(seconds),\n            seconds: seconds,\n        });\n\n    }\n\n    componentDidMount() {\n\n        this.fetchData()\n            .then(res => {\n\n\n                const puzzles = res[0].puzzles;\n                const solution = res[0].solution;\n\n                const val = [];\n                const re = /^[1-9\\b]$/;\n                const sqr = [];\n\n\n                for (let i = 0; i < puzzles.length; i++){\n                    if(re.test(puzzles.charAt(i))){\n                        val[i] = false;\n                    }\n                    else{\n                        val[i] = true;\n                    }\n                    sqr.push(puzzles.charAt(i));\n                }\n                this.setState( {\n                    squares: sqr,\n                    given: puzzles,\n                    valSpots: val,\n                    sol: solution,\n                    solved: false,\n                    time: {\n                        h: 0,\n                        m: 0,\n                        s: 0\n                    }\n                });\n\n\n            })\n            //.then(res => console.log(res))\n            .catch(err => console.log(err));\n\n    }\n\n    fetchData = async () => {\n        const response = await fetch('/api/sudokleQueries/getDailySudokuGrid');\n        const body = response.json();\n        return body;\n    };\n\n\n    handleKeyPress = (event) => {\n        const re = /^[0-9\\b]+$/;\n        if(re.test(event.key)){\n            const squares = this.state.squares.slice();\n            squares[0] = \"valid\";\n        }\n        else{\n            console.log(\"no\");\n        }\n    }\n\n    handleSolved = async() => {\n        try{\n            let res = await fetch('/api/sudokleQueries/updateUser', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({\n                    dailyPuzzleTimedSolved: this.state.seconds,\n                    averageTimeSolvedWeek: this.state.seconds,\n                    userEmail: this.state.userEmail\n                }),\n            });\n        }\n        catch (e) {\n            console.log(e);\n        }\n\n    }\n\n    getInputValue = (event)=>{\n        if(this.state.seconds === 0){\n            this.startTimer();\n        }\n        //let the input field change only if it's being changed to a number 0-9\n        const re = /^[1-9\\b]$/;\n        //const back = /[\\b]/;\n        const index = parseInt(event.target.name);\n        let input = event.target.value.trim();\n        let validSpot = (this.state.valSpots[index]);\n        //console.log(this.state.valSpots[index]);\n        //console.log(this.state.given[1]);\n        if((re.test(input) || input===\"\") && validSpot){\n            if(input === \"\"){\n                input = \" \";\n            }\n            const squares = this.state.squares.slice();\n            const given = this.state.given.slice().substring(0, index) + input + this.state.given.slice().substring(index + 1);\n            //const given = this.state.sol;\n            squares[index] = input;\n            this.setState({\n                valSpots: this.state.valSpots,\n                sol: this.state.sol,\n                solved: false,\n                squares: squares,\n                given: given\n            });\n            if(given === this.state.sol){\n                this.setState({\n                    solved: true\n                });\n                this.handleSolved()\n                    .then(res => {\n                        console.log(\"Solved!!\");\n                    });\n            }\n        }\n        else{\n            //flash a warning maybe?\n            event.target.value = this.state.squares[event.target.name];\n        }\n    };\n\n    renderRow(i){\n        const row = [];\n        let numSquares = 9;\n        for(let c=i; c<i+9; c++){\n            var liClasses = classNames({\n                'one': true,\n                'top': i===0 || i===3*numSquares || i===6*numSquares,\n                'bot': i===(numSquares-1)*numSquares,\n                'lside': c===0 || c%numSquares===0 || c%numSquares===3 || c%numSquares===6,\n                'rside': c%(numSquares)===(numSquares-1),\n                'given': this.state.given[c] != null,\n            });\n            row.push(<input type=\"text\" autocomplete=\"off\" className={liClasses} name={c} value={this.state.given[c]} onChange={this.getInputValue} />);\n        }\n        return row;\n    }\n    renderGrid(){\n        const grid = [];\n        for(let c=0; c<9; c++){\n            grid.push(<div className=\"board-row\"></div>);\n            grid.push(this.renderRow(9*c));\n        }\n        return grid;\n    }\n\n    render() {\n        let status = 'Now Playing - Sudokle';\n\n        if(this.state.solved){\n            return(\n                <Navigate to=\"/Splash\" state={{\n                    minutes: this.state.time.m,\n                    seconds: this.state.time.s}}/>\n            );\n        }\n        else{\n            return (\n                <div>\n                    <div className=\"status\">{status}</div>\n                    {this.renderGrid()}\n                    <div className=\"timer\">\n                        <p>m: {this.state.time.m} s: {this.state.time.s}</p>\n                    </div>\n                </div>\n            );\n        }\n\n    }\n}\n\nclass SudokuGrid extends React.Component {\n    render() {\n        return (\n            <div className=\"game\">\n                <div className=\"game-board\">\n                    <Grid/>\n                </div>\n\n            </div>\n        );\n    }\n}\n\n// ========================================\n\nexport default SudokuGrid;","/Users/daviddu/Desktop/sudokle/sudokle/src/sudoku.js",["75","76","77","78","79","80","81"],[],"/Users/daviddu/Desktop/sudokle/sudokle/src/Splash.js",["82"],[],"import React, {Component} from 'react';\nimport {Link} from \"react-router-dom\";\nimport {useLocation} from \"react-router\";\n\nconst Splash = () =>{\n\n    const location = useLocation();\n\n    return (\n        <header className=\"App-header\">\n            <h1 id=\"title\">You solved the puzzle!</h1>\n            <table>\n                <thead>\n                <tr>\n                    Your time: {location.state.minutes} minutes and {location.state.seconds} seconds!\n\n                </tr>\n                <tr>\n                    <button id=\"leadButton\">\n                        <Link to=\"/DailyLeaderboard\">\n                            Check out your leaderboard standings!\n                        </Link>\n                    </button>\n                </tr>\n                </thead>\n            </table>\n        </header>\n    );\n\n}\n\nexport default Splash;",{"ruleId":"83","severity":1,"message":"84","line":1,"column":24,"nodeType":"85","messageId":"86","endLine":1,"endColumn":28},{"ruleId":"83","severity":1,"message":"87","line":1,"column":30,"nodeType":"85","messageId":"86","endLine":1,"endColumn":37},{"ruleId":"83","severity":1,"message":"88","line":6,"column":8,"nodeType":"85","messageId":"86","endLine":6,"endColumn":18},{"ruleId":"83","severity":1,"message":"89","line":10,"column":9,"nodeType":"85","messageId":"86","endLine":10,"endColumn":20},{"ruleId":"83","severity":1,"message":"90","line":55,"column":17,"nodeType":"85","messageId":"86","endLine":55,"endColumn":20},{"ruleId":"91","severity":1,"message":"92","line":104,"column":53,"nodeType":"93","endLine":104,"endColumn":97},{"ruleId":"83","severity":1,"message":"94","line":2,"column":8,"nodeType":"85","messageId":"86","endLine":2,"endColumn":12},{"ruleId":"83","severity":1,"message":"95","line":4,"column":8,"nodeType":"85","messageId":"86","endLine":4,"endColumn":16},{"ruleId":"83","severity":1,"message":"96","line":5,"column":10,"nodeType":"85","messageId":"86","endLine":5,"endColumn":23},{"ruleId":"83","severity":1,"message":"97","line":5,"column":25,"nodeType":"85","messageId":"86","endLine":5,"endColumn":31},{"ruleId":"83","severity":1,"message":"98","line":5,"column":33,"nodeType":"85","messageId":"86","endLine":5,"endColumn":38},{"ruleId":"83","severity":1,"message":"99","line":6,"column":8,"nodeType":"85","messageId":"86","endLine":6,"endColumn":14},{"ruleId":"83","severity":1,"message":"100","line":7,"column":8,"nodeType":"85","messageId":"86","endLine":7,"endColumn":12},{"ruleId":"83","severity":1,"message":"101","line":8,"column":8,"nodeType":"85","messageId":"86","endLine":8,"endColumn":25},{"ruleId":"83","severity":1,"message":"95","line":2,"column":8,"nodeType":"85","messageId":"86","endLine":2,"endColumn":16},{"ruleId":"83","severity":1,"message":"102","line":5,"column":9,"nodeType":"85","messageId":"86","endLine":5,"endColumn":19},{"ruleId":"83","severity":1,"message":"103","line":5,"column":21,"nodeType":"85","messageId":"86","endLine":5,"endColumn":26},{"ruleId":"83","severity":1,"message":"89","line":5,"column":28,"nodeType":"85","messageId":"86","endLine":5,"endColumn":39},{"ruleId":"83","severity":1,"message":"90","line":126,"column":17,"nodeType":"85","messageId":"86","endLine":126,"endColumn":20},{"ruleId":"104","severity":1,"message":"105","line":25,"column":25,"nodeType":"106","messageId":"107","endLine":25,"endColumn":42},{"ruleId":"108","severity":1,"message":"109","line":81,"column":67,"nodeType":"110","messageId":"111","endLine":81,"endColumn":68},{"ruleId":"108","severity":1,"message":"109","line":82,"column":67,"nodeType":"110","messageId":"111","endLine":82,"endColumn":68},{"ruleId":"108","severity":1,"message":"109","line":83,"column":61,"nodeType":"110","messageId":"111","endLine":83,"endColumn":62},{"ruleId":"83","severity":1,"message":"112","line":89,"column":10,"nodeType":"85","messageId":"86","endLine":89,"endColumn":16},{"ruleId":"83","severity":1,"message":"113","line":143,"column":20,"nodeType":"85","messageId":"86","endLine":143,"endColumn":25},{"ruleId":"83","severity":1,"message":"114","line":143,"column":27,"nodeType":"85","messageId":"86","endLine":143,"endColumn":33},{"ruleId":"83","severity":1,"message":"115","line":1,"column":16,"nodeType":"85","messageId":"86","endLine":1,"endColumn":25},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'NavLink' is defined but never used.","'jwt_decode' is defined but never used.","'printPuzzle' is defined but never used.","'res' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'logo' is defined but never used.","'ReactDOM' is defined but never used.","'BrowserRouter' is defined but never used.","'Routes' is defined but never used.","'Route' is defined but never used.","'Layout' is defined but never used.","'Home' is defined but never used.","'WeeklyLeaderboard' is defined but never used.","'makePuzzle' is defined but never used.","'pluck' is defined but never used.","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'isPeer' is defined but never used.","'board' is assigned a value but never used.","'string' is assigned a value but never used.","'Component' is defined but never used."]
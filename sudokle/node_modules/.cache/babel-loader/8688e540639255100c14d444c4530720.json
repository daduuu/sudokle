{"ast":null,"code":"function randomChoice(choices) {\n  return choices[Math.floor(Math.random() * choices.length)];\n}\n\nexport function range(n) {\n  return Array.from(Array(n).keys());\n}\nexport function makePuzzle() {\n  while (true) {\n    try {\n      const puzzle = Array.from(Array(9).keys()).map(() => Array.from(Array(9).keys()));\n      const rows = Array.from(Array(9).keys()).map(() => new Set([1, 2, 3, 4, 5, 6, 7, 8, 9]));\n      const columns = Array.from(Array(9).keys()).map(() => new Set([1, 2, 3, 4, 5, 6, 7, 8, 9]));\n      const squares = Array.from(Array(9).keys()).map(() => new Set([1, 2, 3, 4, 5, 6, 7, 8, 9]));\n      Array.from(Array(9).keys()).forEach(i => {\n        Array.from(Array(9).keys()).forEach(j => {\n          const row = rows[i];\n          const col = columns[j];\n          const square = squares[Math.floor(i / 3) * 3 + Math.floor(j / 3)];\n          const choices = [...row].filter(x => col.has(x)).filter(x => square.has(x));\n          const choice = randomChoice(choices);\n\n          if (!choice) {\n            throw 'dead end';\n          }\n\n          puzzle[i][j] = choice;\n          row.delete(choice);\n          col.delete(choice);\n          square.delete(choice);\n        });\n      });\n      return puzzle;\n    } catch (e) {\n      continue;\n    }\n  }\n}\nexport function printPuzzle() {\n  var puzzle = makePuzzle();\n  var board = pluck(puzzle, 30);\n  var string = \"\";\n  board.forEach(row => {\n    string += row;\n  });\n  return {\n    puzzle,\n    board\n  };\n} //printPuzzle();\n\nfunction canBeA(puzzle, i, j, c) {\n  const x = Math.floor(c / 9);\n  const y = c % 9;\n  const value = puzzle[x][y];\n  if (puzzle[i][j] === value) return true;\n  if (puzzle[i][j] > 0) return false;\n\n  for (const m in Array.from(Array(9).keys())) {\n    const rowPeer = {\n      x: m,\n      y: j\n    };\n    const colPeer = {\n      x: i,\n      y: m\n    };\n    const sPeer = {\n      x: Math.floor(i / 3) * 3 + Math.floor(m / 3),\n      y: Math.floor(j / 3) * 3 + m % 3\n    };\n    if (!(rowPeer.x === x && rowPeer.y === y) && puzzle[(rowPeer.x, rowPeer.y)] === value) return false;\n    if (!(colPeer.x === x && colPeer.y === y) && puzzle[(colPeer.x, colPeer.y)] === value) return false;\n    if (!(sPeer.x === x && sPeer.y === y) && puzzle[(sPeer.x, sPeer.y)] === value) return false;\n  }\n\n  return true;\n}\n\nexport function isPeer(a, b) {\n  if (!a || !b) return false;\n  const squareA = Math.floor(a.x / 3) * 3 + Math.floor(a.y / 3);\n  const squareB = Math.floor(b.x / 3) * 3 + Math.floor(b.y / 3);\n  return a.x === b.x || a.y === b.y || squareA === squareB;\n}\nexport function pluck(allCells) {\n  let n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  const puzzle = JSON.parse(JSON.stringify(allCells));\n  const cells = new Set(Array.from(Array(81).keys()));\n  const cellsLeft = new Set(cells);\n\n  while (cellsLeft.size && cells.size > n) {\n    const cell = randomChoice([...cells]);\n    const x = Math.floor(cell / 9);\n    const y = cell % 9;\n    cellsLeft.delete(cell);\n    let row = false;\n    let column = false;\n    let square = false;\n    range(9).forEach(i => {\n      const rowPeer = {\n        x: i,\n        y\n      };\n      const columnPeer = {\n        x,\n        y: i\n      };\n      const squarePeer = {\n        x: Math.floor(Math.floor(cell / 9) / 3) * 3 + Math.floor(i / 3),\n        y: Math.floor(cell / 9) % 3 * 3 + i % 3\n      };\n\n      if (rowPeer.x !== x) {\n        row = canBeA(puzzle, rowPeer.x, rowPeer.y, cell);\n      }\n\n      if (columnPeer.y !== y) {\n        column = canBeA(puzzle, columnPeer.x, columnPeer.y, cell);\n      }\n\n      if (squarePeer.x !== x && squarePeer.y !== y) {\n        square = canBeA(puzzle, squarePeer.x, squarePeer.y, cell);\n      }\n    });\n\n    if (row && column && square) {\n      continue;\n    } else {\n      puzzle[x][y] = 0;\n      cells.delete(cell);\n    }\n  }\n\n  return puzzle;\n}","map":{"version":3,"names":["randomChoice","choices","Math","floor","random","length","range","n","Array","from","keys","makePuzzle","puzzle","map","rows","Set","columns","squares","forEach","i","j","row","col","square","filter","x","has","choice","delete","e","printPuzzle","board","pluck","string","canBeA","c","y","value","m","rowPeer","colPeer","sPeer","isPeer","a","b","squareA","squareB","allCells","JSON","parse","stringify","cells","cellsLeft","size","cell","column","columnPeer","squarePeer"],"sources":["/Users/daviddu/Desktop/sudokle/sudokle/src/sudoku.js"],"sourcesContent":["function randomChoice(choices){\n    return choices[Math.floor(Math.random() * choices.length)];\n}\n\nexport function range(n){\n    return Array.from(Array(n).keys());\n}\n\nexport function makePuzzle(){\n    while(true){\n        try{\n            const puzzle  = Array.from(Array(9).keys()).map(() => Array.from(Array(9).keys()));\n            const rows = Array.from(Array(9).keys()).map(() => new Set([1,2,3,4,5,6,7,8,9]));\n            const columns = Array.from(Array(9).keys()).map(() => new Set([1,2,3,4,5,6,7,8,9]));\n            const squares = Array.from(Array(9).keys()).map(() => new Set([1,2,3,4,5,6,7,8,9]));\n            Array.from(Array(9).keys()).forEach((i) => {\n                Array.from(Array(9).keys()).forEach((j) => {\n                    const row = rows[i];\n                    const col = columns[j];\n                    const square = squares[((Math.floor(i/3))*3) + Math.floor(j/3)];\n                    const choices = [...row].filter(x => col.has(x)).filter(x => square.has(x));\n                    const choice = randomChoice(choices);\n                    if(!choice){\n                        throw 'dead end';\n                    }\n                    puzzle[i][j] = choice;\n                    row.delete(choice);\n                    col.delete(choice);\n                    square.delete(choice);\n                });\n            });\n            return puzzle;\n        }\n        catch(e){\n            continue;\n        }\n    }\n}\n\nexport function printPuzzle(){\n    var puzzle = makePuzzle();\n    var board = pluck(puzzle, 30);\n    var string = \"\";\n    board.forEach((row) => {\n        string += row;\n    });\n    return {puzzle, board};\n}\n\n\n//printPuzzle();\n\nfunction canBeA(puzzle, i, j, c){\n    const x = Math.floor(c/9);\n    const y = c%9;\n    const value = puzzle[x][y];\n    if(puzzle[i][j] === value) return true;\n    if(puzzle[i][j] > 0) return false;\n    for(const m in Array.from(Array(9).keys())){\n        const rowPeer = {x:m,y:j};\n        const colPeer = {x:i,y:m};\n        const sPeer = {\n            x: (Math.floor(i/3)*3) + Math.floor(m/3),\n            y: (Math.floor(j/3)*3) + (m%3),\n        };\n        if(!(rowPeer.x === x && rowPeer.y ===y)&& puzzle[rowPeer.x, rowPeer.y] === value) return false;\n        if(!(colPeer.x === x && colPeer.y ===y)&& puzzle[colPeer.x, colPeer.y] === value) return false;\n        if(!(sPeer.x === x && sPeer.y ===y)&& puzzle[sPeer.x, sPeer.y] === value) return false;\n\n    }\n    return true;\n}\n\nexport function isPeer(a,b){\n    if(!a || !b) return false;\n    const squareA = ((Math.floor(a.x/3))*3) + Math.floor(a.y/3);\n    const squareB = ((Math.floor(b.x/3))*3) + Math.floor(b.y/3);\n    return a.x === b.x || a.y === b.y || squareA === squareB;\n}\n\nexport function pluck(allCells, n = 0){\n    const puzzle = JSON.parse(JSON.stringify(allCells));\n\n    const cells = new Set(Array.from(Array(81).keys()));\n    const cellsLeft = new Set(cells);\n    while(cellsLeft.size && cells.size > n){\n        const cell = randomChoice([...cells]);\n        const x = Math.floor(cell/9);\n        const y = cell%9;\n        cellsLeft.delete(cell);\n        let row = false;\n        let column = false;\n        let square = false;\n        range(9).forEach((i) => {\n            const rowPeer = {x:i, y};\n            const columnPeer= {x, y:i};\n            const squarePeer ={\n                x: (Math.floor(Math.floor(cell/9)/3)*3) + Math.floor(i/3),\n                y: ((Math.floor(cell/9)%3)*3) + (i%3),\n            };\n            if(rowPeer.x !== x){\n                row = canBeA(puzzle,rowPeer.x, rowPeer.y,cell);\n            }\n            if(columnPeer.y !== y){\n                column = canBeA(puzzle, columnPeer.x, columnPeer.y, cell);\n            }\n            if(squarePeer.x !== x && squarePeer.y !==y ){\n                square = canBeA(puzzle, squarePeer.x, squarePeer.y,cell);\n            }\n        });\n        if(row && column && square){\n            continue;\n        }\n        else{\n            puzzle[x][y] = 0;\n            cells.delete(cell);\n        }\n    }\n    return puzzle;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}
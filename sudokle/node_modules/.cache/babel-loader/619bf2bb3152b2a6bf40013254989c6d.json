{"ast":null,"code":"var _jsxFileName = \"/Users/daviddu/Desktop/sudokle/sudokle/src/SudokuGrid.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './SudokuGrid.css';\nimport classNames from 'classnames';\nimport { makePuzzle, pluck, printPuzzle } from \"./sudoku\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Grid extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleKeyPress = event => {\n      const re = /^[0-9\\b]+$/;\n\n      if (re.test(event.key)) {\n        const squares = this.state.squares.slice();\n        squares[0] = \"valid\";\n        this.setState({\n          squares: squares\n        });\n      } else {\n        console.log(\"no\");\n      }\n    };\n\n    this.getInputValue = event => {\n      //let the input field change only if it's being changed to a number 0-9\n      const re = /[1-9]/; //const back = /[\\b]/;\n\n      const index = parseInt(event.target.name);\n      const input = event.target.value.trim();\n      console.log(index);\n      let validSpot = this.state.valSpots[index]; //console.log(this.state.valSpots[index]);\n      //console.log(this.state.given[1]);\n\n      if ((re.test(input) || input === \"\") && validSpot) {\n        const squares = this.state.squares.slice(); //const given = this.state.given.slice().substring(0, index) + input + this.state.given.slice().substring(index + 1);\n        //console.log(this.state.given.slice().substring(index + input.length));\n        //console.log(given);\n\n        squares[index] = input;\n        this.setState({\n          squares: squares\n        });\n      } else {\n        //flash a warning maybe?\n        event.target.value = this.state.squares[event.target.name];\n      }\n    };\n\n    const {\n      puzzle,\n      board,\n      string,\n      sol\n    } = printPuzzle();\n    const ogiven = string; //fill this with elliot's numbers\n    //ogiven[1] = 8;  //set the first row second column number to 8, unchangeable by the user\n\n    const val = [];\n    const _re = /^[1-9\\b]$/;\n    const sqr = [];\n\n    for (let i = 0; i < ogiven.length; i++) {\n      if (_re.test(ogiven.charAt(i))) {\n        val[i] = false;\n      } else {\n        val[i] = true;\n      }\n\n      sqr.push(ogiven.charAt(i));\n    }\n\n    this.state = {\n      squares: sqr,\n      given: ogiven,\n      valSpots: val\n    };\n    console.log(sqr);\n  }\n\n  renderRow(i) {\n    const row = [];\n    let numSquares = 9;\n\n    for (let c = i; c < i + 9; c++) {\n      var liClasses = classNames({\n        'one': true,\n        'top': i === 0 || i === 3 * numSquares || i === 6 * numSquares,\n        'bot': i === (numSquares - 1) * numSquares,\n        'lside': c === 0 || c % numSquares === 0 || c % numSquares === 3 || c % numSquares === 6,\n        'rside': c % numSquares === numSquares - 1,\n        'given': this.state.given[c] != null\n      });\n      row.push( /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        autocomplete: \"off\",\n        className: liClasses,\n        name: c,\n        value: this.state.given[c],\n        onChange: this.getInputValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 22\n      }, this));\n    }\n\n    return row;\n  }\n\n  renderGrid() {\n    const grid = [];\n\n    for (let c = 0; c < 9; c++) {\n      grid.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 23\n      }, this));\n      grid.push(this.renderRow(9 * c));\n    }\n\n    return grid;\n  }\n\n  render() {\n    let status = 'Now Playing - Sudokle';\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status\",\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), this.renderGrid()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass SudokuGrid extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this);\n  }\n\n} // ========================================\n\n\nexport default SudokuGrid;","map":{"version":3,"names":["React","ReactDOM","classNames","makePuzzle","pluck","printPuzzle","Grid","Component","constructor","props","handleKeyPress","event","re","test","key","squares","state","slice","setState","console","log","getInputValue","index","parseInt","target","name","input","value","trim","validSpot","valSpots","puzzle","board","string","sol","ogiven","val","sqr","i","length","charAt","push","given","renderRow","row","numSquares","c","liClasses","renderGrid","grid","render","status","SudokuGrid"],"sources":["/Users/daviddu/Desktop/sudokle/sudokle/src/SudokuGrid.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './SudokuGrid.css';\nimport classNames from 'classnames'\nimport {makePuzzle, pluck, printPuzzle} from \"./sudoku\";\n\nclass Grid extends React.Component {\n    constructor(props){\n        super(props);\n        const {puzzle, board, string, sol} = printPuzzle();\n        const ogiven = string; //fill this with elliot's numbers\n        //ogiven[1] = 8;  //set the first row second column number to 8, unchangeable by the user\n        const val = [];\n        const re = /^[1-9\\b]$/;\n        const sqr = [];\n\n\n        for (let i = 0; i < ogiven.length; i++){\n            if(re.test(ogiven.charAt(i))){\n                val[i] = false;\n            }\n            else{\n                val[i] = true;\n            }\n            sqr.push(ogiven.charAt(i));\n        }\n        this.state = {\n            squares: sqr,\n            given: ogiven,\n            valSpots: val\n        };\n        console.log(sqr);\n    }\n\n\n    handleKeyPress = (event) => {\n        const re = /^[0-9\\b]+$/;\n        if(re.test(event.key)){\n            const squares = this.state.squares.slice();\n            squares[0] = \"valid\";\n            this.setState({squares: squares,\n            });\n        }\n        else{\n            console.log(\"no\");\n        }\n    }\n\n    getInputValue = (event)=>{\n        //let the input field change only if it's being changed to a number 0-9\n        const re = /[1-9]/;\n        //const back = /[\\b]/;\n        const index = parseInt(event.target.name);\n        const input = event.target.value.trim();\n        console.log(index);\n        let validSpot = (this.state.valSpots[index]);\n        //console.log(this.state.valSpots[index]);\n        //console.log(this.state.given[1]);\n        if((re.test(input) || input===\"\") && validSpot){\n            const squares = this.state.squares.slice();\n            //const given = this.state.given.slice().substring(0, index) + input + this.state.given.slice().substring(index + 1);\n            //console.log(this.state.given.slice().substring(index + input.length));\n            //console.log(given);\n            squares[index] = input;\n            this.setState({squares: squares\n            });\n        }\n        else{\n            //flash a warning maybe?\n            event.target.value = this.state.squares[event.target.name];\n        }\n    };\n\n    renderRow(i){\n        const row = [];\n        let numSquares = 9;\n        for(let c=i; c<i+9; c++){\n            var liClasses = classNames({\n                'one': true,\n                'top': i===0 || i===3*numSquares || i===6*numSquares,\n                'bot': i===(numSquares-1)*numSquares,\n                'lside': c===0 || c%numSquares===0 || c%numSquares===3 || c%numSquares===6,\n                'rside': c%(numSquares)===(numSquares-1),\n                'given': this.state.given[c] != null,\n            });\n            row.push(<input type=\"text\" autocomplete=\"off\" className={liClasses} name={c} value={this.state.given[c]} onChange={this.getInputValue} />);\n        }\n        return row;\n    }\n    renderGrid(){\n        const grid = [];\n        for(let c=0; c<9; c++){\n            grid.push(<div className=\"board-row\"></div>);\n            grid.push(this.renderRow(9*c));\n        }\n        return grid;\n    }\n\n    render() {\n        let status = 'Now Playing - Sudokle';\n\n        return (\n            <div>\n                <div className=\"status\">{status}</div>\n                {this.renderGrid()}\n            </div>\n        );\n    }\n}\n\nclass SudokuGrid extends React.Component {\n    render() {\n        return (\n            <div className=\"game\">\n                <div className=\"game-board\">\n                    <Grid/>\n                </div>\n            </div>\n        );\n    }\n}\n\n// ========================================\n\nexport default SudokuGrid;"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/daviddu/Desktop/sudokle/sudokle/src/App.js\";\nimport { BrowserRouter, Link, NavLink, Route, Routes } from \"react-router-dom\";\nimport Layout from \"./Layout\";\nimport Home from \"./Home\";\nimport LifeTimeLeaderboard from \"./LifeTimeLeaderboard\";\nimport React, { Component } from \"react\";\nimport jwt_decode from \"jwt-decode\";\nimport DailyLeaderBoard from \"./DailyLeaderBoard\";\nimport SudokuGrid from \"./SudokuGrid\";\nimport Splash from \"./Splash\";\nimport { getCreationDate, printPuzzle } from \"./sudoku\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.createUser = async event => {\n      event.preventDefault();\n\n      try {\n        let res = await fetch('/api/sudokleQueries/addUser', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            userEmail: this.state.value\n          })\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.addPuzzle = async => {\n      const {\n        puzzle,\n        board,\n        string,\n        sol\n      } = printPuzzle();\n      fetch(\"/api/sudokleQueries/addSudoku\", {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          puzzle: string,\n          solution: sol,\n          creationDate: getCreationDate()\n        })\n      }).then(res => {\n        console.log(\"Request complete! response:\", res);\n      });\n    };\n\n    this.state = {\n      user: null,\n      value: '',\n      timeStarted: new Date().getTime(),\n      timeTaken: 0\n    };\n    var today = new Date();\n\n    if (today.getHours() === 18) {\n      this.addPuzzle();\n    }\n\n    this.addPuzzle();\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleClick() {\n    const timeFinished = !this.state.timeFinished ? new Date().getTime() : this.state.timeFinished;\n    const timeTaken = (timeFinished - this.state.timeStarted) / 1000;\n    let bestTime = this.state.bestTime;\n\n    if (bestTime.length > 1) {\n      if (timeFinished < this.state.bestTime[1]) bestTime[1] = timeTaken;\n    } else {\n      bestTime.push(timeTaken);\n    }\n\n    this.setState({ ...this.state,\n      timeFinished,\n      timeTaken,\n      bestTime: bestTime\n    });\n  }\n\n  handleChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"navBar2\",\n          children: /*#__PURE__*/_jsxDEV(Routes, {\n            id: \"linksR\",\n            children: /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/\",\n              element: /*#__PURE__*/_jsxDEV(Layout, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 54\n              }, this),\n              children: [/*#__PURE__*/_jsxDEV(Route, {\n                index: true,\n                element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 55\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                path: \"DailyLeaderboard\",\n                element: /*#__PURE__*/_jsxDEV(DailyLeaderBoard, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 73\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                path: \"LifeTimeLeaderboard\",\n                element: /*#__PURE__*/_jsxDEV(LifeTimeLeaderboard, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 76\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                path: \"SudokuGrid\",\n                element: /*#__PURE__*/_jsxDEV(SudokuGrid, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 67\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                path: \"Splash\",\n                element: /*#__PURE__*/_jsxDEV(Splash, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 63\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                path: \"*\",\n                element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 58\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["BrowserRouter","Link","NavLink","Route","Routes","Layout","Home","LifeTimeLeaderboard","React","Component","jwt_decode","DailyLeaderBoard","SudokuGrid","Splash","getCreationDate","printPuzzle","App","constructor","props","createUser","event","preventDefault","res","fetch","method","headers","body","JSON","stringify","userEmail","state","value","e","console","log","addPuzzle","async","puzzle","board","string","sol","solution","creationDate","then","user","timeStarted","Date","getTime","timeTaken","today","getHours","handleChange","bind","handleClick","timeFinished","bestTime","length","push","setState","target","render"],"sources":["/Users/daviddu/Desktop/sudokle/sudokle/src/App.js"],"sourcesContent":["import {BrowserRouter, Link, NavLink, Route, Routes} from \"react-router-dom\";\nimport Layout from \"./Layout\";\nimport Home from \"./Home\";\nimport LifeTimeLeaderboard from \"./LifeTimeLeaderboard\";\nimport React, {Component} from \"react\";\nimport jwt_decode from \"jwt-decode\";\nimport DailyLeaderBoard from \"./DailyLeaderBoard\";\nimport SudokuGrid from \"./SudokuGrid\";\nimport Splash from \"./Splash\";\nimport {getCreationDate, printPuzzle} from \"./sudoku\";\n\n\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: null,\n            value: '',\n            timeStarted: new Date().getTime(),\n            timeTaken: 0,\n        };\n\n        var today = new Date();\n\n        if(today.getHours() === 18){\n            this.addPuzzle();\n        }\n        this.addPuzzle();\n\n        this.handleChange = this.handleChange.bind(this);\n    }\n    handleClick(){\n        const timeFinished = !this.state.timeFinished? new Date().getTime() : this.state.timeFinished;\n        const timeTaken = (timeFinished-this.state.timeStarted)/1000;\n        let bestTime = this.state.bestTime;\n        if(bestTime.length > 1){\n            if(timeFinished < this.state.bestTime[1])\n                bestTime[1] = timeTaken;\n        }\n        else{\n            bestTime.push(timeTaken);\n        }\n        this.setState({\n            ...this.state,\n            timeFinished,\n            timeTaken,\n            bestTime: bestTime,\n        });\n    }\n\n\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n\n\n    createUser = async(event) => {\n        event.preventDefault();\n        try{\n            let res = await fetch('/api/sudokleQueries/addUser', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({\n                    userEmail: this.state.value\n                }),\n            });\n        }\n        catch (e) {\n            console.log(e);\n        }\n    };\n\n\n    addPuzzle = async => {\n        const {puzzle, board, string, sol} = printPuzzle();\n        fetch(\"/api/sudokleQueries/addSudoku\", {\n            method: \"POST\",\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n                puzzle: string,\n                solution: sol,\n                creationDate: getCreationDate()\n            })\n        }).then(res => {\n            console.log(\"Request complete! response:\", res);\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <BrowserRouter>\n                    <div id={\"navBar2\"}>\n                        <Routes id={\"linksR\"}>\n                            <Route path=\"/\" element={<Layout/>}>\n                                <Route index element={<Home/>} />\n                                <Route path=\"DailyLeaderboard\" element={<DailyLeaderBoard/>} />\n                                <Route path=\"LifeTimeLeaderboard\" element={<LifeTimeLeaderboard/>} />\n                                <Route path=\"SudokuGrid\" element={<SudokuGrid/>} />\n                                <Route path=\"Splash\" element={<Splash/>} />\n                                <Route path=\"*\" element={<Home/>} />\n                            </Route>\n                        </Routes>\n\n                    </div>\n                </BrowserRouter>\n            </div>\n\n        );\n    }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
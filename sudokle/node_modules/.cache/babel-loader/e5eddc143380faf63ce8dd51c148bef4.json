{"ast":null,"code":"var _jsxFileName = \"/Users/daviddu/Pictures/sudokle/sudokle/src/SignIn.js\";\nimport React, { Component } from 'react';\nimport { Outlet, Link, Navigate, Route } from \"react-router-dom\";\nimport './App.css';\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\nimport Layout from \"./Layout\";\nimport { EMAIL, LOGIN, setEMAIL, setLOGIN, SOLVED, setSOLVED, setTIME } from './globals';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SignIn extends Component {\n  constructor(props) {\n    super(props);\n\n    this.ShowSignIn = () => /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"loginform\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: this.handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"emailinput\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Email:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: this.state.email,\n                onChange: this.handleChange,\n                placeholder: \"example@gmail.com\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"pwdinput\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Password:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                value: this.state.password,\n                onChange: this.handlePChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"submitbtn\",\n              type: \"submit\",\n              value: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }, this);\n\n    this.fetchUsers = async () => {\n      const response = await fetch('/api/sudokleQueries/getUsers');\n      const body = response.json();\n      return body;\n    };\n\n    this.handleSort = async () => {\n      console.log(\"hi\");\n      this.fetchUsers().then(res => this.setState({\n        users: res\n      })).catch(err => console.log(err));\n    };\n\n    this.state = {\n      email: '',\n      password: '',\n      users: this.handleSort()\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handlePChange = this.handlePChange.bind(this);\n    const {\n      navigation\n    } = this.props;\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(() => this.setState({}), 1000);\n    console.log(\"hi\");\n    this.fetchUsers().then(res => this.setState({\n      users: res\n    })).catch(err => console.log(err));\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  handleChange(event) {\n    this.setState({\n      email: event.target.value\n    });\n  }\n\n  handlePChange(event) {\n    this.setState({\n      password: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    if (this.state.email == '') {\n      alert('Email input required');\n    } else if (this.state.password == '') {\n      alert('Password input required');\n    } else {\n      this.setState({\n        users: this.handleSort()\n      });\n      const found = this.state.users.some(element => {\n        if (element.userEmail == this.state.email) {\n          if (element.pass == this.state.password) {\n            return true;\n          }\n        }\n\n        return false;\n      });\n      const solved = this.state.users.some(element => {\n        if (element.userEmail == this.state.email) {\n          if (element.dailyPuzzleSolved.data[0] == 1) {\n            return true;\n          }\n        }\n\n        return false;\n      });\n      const time = this.state.users.some(element => {\n        if (element.userEmail == this.state.email) {\n          return element.dailyPuzzleTimedSolved;\n        }\n\n        return 0;\n      });\n\n      if (found) {\n        setTIME(time);\n        setSOLVED(solved);\n        setEMAIL(this.state.email);\n        setLOGIN(true);\n      } else {\n        alert('Incorrect email or password');\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: LOGIN ? /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 16\n      }, this) : /*#__PURE__*/_jsxDEV(this.ShowSignIn, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 37\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default SignIn;","map":{"version":3,"names":["React","Component","Outlet","Link","Navigate","Route","Container","Row","Col","Button","Layout","EMAIL","LOGIN","setEMAIL","setLOGIN","SOLVED","setSOLVED","setTIME","SignIn","constructor","props","ShowSignIn","handleSubmit","state","email","handleChange","password","handlePChange","fetchUsers","response","fetch","body","json","handleSort","console","log","then","res","setState","users","catch","err","bind","navigation","componentDidMount","interval","setInterval","componentWillUnmount","clearInterval","event","target","value","preventDefault","alert","found","some","element","userEmail","pass","solved","dailyPuzzleSolved","data","time","dailyPuzzleTimedSolved","render"],"sources":["/Users/daviddu/Pictures/sudokle/sudokle/src/SignIn.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { Outlet, Link, Navigate, Route} from \"react-router-dom\";\nimport './App.css';\nimport {Container, Row, Col, Button} from \"react-bootstrap\";\nimport Layout from \"./Layout\";\nimport {EMAIL, LOGIN,setEMAIL, setLOGIN, SOLVED, setSOLVED, setTIME} from './globals';\n\n\n\nclass SignIn extends Component {\n  \n  constructor(props){\n      super(props);\n      this.state = {\n          email: '',\n          password: '',\n          users: this.handleSort(),\n      }\n      this.handleChange= this.handleChange.bind(this);\n      this.handleSubmit = this.handleSubmit.bind(this);\n      this.handlePChange = this.handlePChange.bind(this);\n      const {navigation} = this.props;\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(() => this.setState({ }), 1000);\n    console.log(\"hi\");\n    this.fetchUsers()\n        .then(res => this.setState(\n            {\n              users:res\n            }\n        ))\n        .catch(err => console.log(err));\n  }\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  handleChange(event){\n\n      this.setState({\n          email: event.target.value\n      });\n  }\n\n  handlePChange(event){\n      this.setState({\n          password: event.target.value\n      });\n  }\n  handleSubmit(event){\n    event.preventDefault();\n      if(this.state.email == ''){\n          alert('Email input required')\n      }\n      else if(this.state.password == ''){\n          alert('Password input required')\n      }\n      else{\n        this.setState({\n            users: this.handleSort(),\n        })\n        const found = this.state.users.some(element =>{\n            if(element.userEmail == this.state.email){\n                if(element.pass == this.state.password){\n                    return true;\n                }\n            }\n            return false;\n        });\n        const solved = this.state.users.some(element =>{\n          if(element.userEmail == this.state.email){\n          if(element.dailyPuzzleSolved.data[0] == 1){\n              return true;\n          }\n        }\n          return false;\n      });\n      const time = this.state.users.some(element =>{\n        if(element.userEmail == this.state.email){\n              return element.dailyPuzzleTimedSolved;\n        }\n        return 0;\n    });\n        if(found){\n            setTIME(time);\n            setSOLVED(solved);\n            setEMAIL(this.state.email);\n            setLOGIN(true);\n        }\n        else{\n            alert('Incorrect email or password');\n        }\n      }\n  }\n  ShowSignIn = () => (\n    <header className=\"App-header\">\n\n      <h1>Sign In</h1>\n      <Container>\n        <div id=\"loginform\">\n          <form onSubmit={this.handleSubmit}>\n              <div id=\"emailinput\">\n                <p>Email:</p>\n                <input type=\"text\" value={this.state.email} onChange={this.handleChange} placeholder=\"example@gmail.com\"/>\n                <br></br>\n              </div>\n              <div id=\"pwdinput\">\n                <p>Password:</p>\n                <input type=\"password\" value={this.state.password} onChange={this.handlePChange}/>\n                <br></br>\n              </div>\n              <input id=\"submitbtn\" type=\"submit\" value=\"Submit\"/>\n            </form>\n          </div>\n        \n      </Container>\n\n    </header>\n);\n\n// ShowHomeButton = () => (\n//     <header className=\"App-header\">\n//       <h1>Hi {EMAIL}</h1>\n//     <Button id=\"playbtn\">\n//           <Link to=\"/\" id=\"playLink\">\n//               Go back Home\n//           </Link>\n//     </Button>\n//     </header>\n// );\n  fetchUsers = async () => {\n    const response = await fetch('/api/sudokleQueries/getUsers');\n    const body = response.json();\n    return body;\n  };\n\n  handleSort = async () =>{\n    console.log(\"hi\");\n    this.fetchUsers()\n        .then(res => this.setState(\n            {\n              users:res\n            }\n        ))\n        .catch(err => console.log(err));\n}\n  render() {\n    return (\n      <div className=\"App\">\n      {LOGIN ? <Navigate to=\"/\"/> : <this.ShowSignIn/>}\n      </div>\n    );\n  }\n}\n\nexport default SignIn;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adarsh\\\\Documents\\\\UCLA\\\\q3\\\\CS 35L\\\\Project\\\\sudokle\\\\sudokle\\\\src\\\\SudokuGrid.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './SudokuGrid.css';\nimport classNames from 'classnames';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Grid extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleKeyPress = event => {\n      const re = /^[0-9\\b]+$/;\n\n      if (re.test(event.key)) {\n        const squares = this.state.squares.slice();\n        squares[0] = \"valid\";\n        this.setState({\n          squares: squares\n        });\n      } else {\n        console.log(\"no\");\n      }\n    };\n\n    this.getInputValue = event => {\n      //let the input field change only if it's being changed to a number 0-9\n      const re = /^[0-9]$/; //const back = /\"\"/;\n      //const re = /^[^a-zA-z!@#$%^&*()_=+`~]$/;\n\n      const index = parseInt(event.target.name);\n      const input = event.target.value;\n      let validSpot = this.state.given[index] === null; //console.log(this.state.given[1]);\n\n      if (re.test(input) && validSpot) {\n        const squares = this.state.squares.slice();\n        squares[index] = input;\n        this.setState({\n          squares: squares\n        });\n      } else {\n        //flash a warning maybe?\n        event.target.value = this.state.squares[event.target.name];\n      }\n    };\n\n    const ogiven = Array(81).fill(null); //fill this with elliot's numbers\n\n    ogiven[1] = 8;\n    this.state = {\n      squares: Array(81).fill(null),\n      given: ogiven\n    };\n  }\n\n  renderRow(i) {\n    const row = [];\n    let numSquares = 9;\n\n    for (let c = i; c < i + 9; c++) {\n      var liClasses = classNames({\n        'one': true,\n        'top': i === 0 || i === 3 * numSquares || i === 6 * numSquares,\n        'bot': i === (numSquares - 1) * numSquares,\n        'lside': c === 0 || c % numSquares === 0 || c % numSquares === 3 || c % numSquares === 6,\n        'rside': c % numSquares === numSquares - 1,\n        'given': this.state.given[c] != null\n      });\n      row.push( /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: liClasses,\n        name: c,\n        value: this.state.given[c],\n        onChange: this.getInputValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 18\n      }, this));\n    }\n\n    return row;\n  }\n\n  renderGrid() {\n    const grid = [];\n\n    for (let c = 0; c < 9; c++) {\n      grid.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 19\n      }, this));\n      grid.push(this.renderRow(9 * c));\n    }\n\n    return grid;\n  }\n\n  render() {\n    let status = 'Now Playing - Sudokle';\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status\",\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), this.renderGrid()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nclass SudokuGrid extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this);\n  }\n\n} // ========================================\n\n\nexport default SudokuGrid;","map":{"version":3,"names":["React","ReactDOM","classNames","Grid","Component","constructor","props","handleKeyPress","event","re","test","key","squares","state","slice","setState","console","log","getInputValue","index","parseInt","target","name","input","value","validSpot","given","ogiven","Array","fill","renderRow","i","row","numSquares","c","liClasses","push","renderGrid","grid","render","status","SudokuGrid"],"sources":["C:/Users/Adarsh/Documents/UCLA/q3/CS 35L/Project/sudokle/sudokle/src/SudokuGrid.js"],"sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './SudokuGrid.css';\r\nimport classNames from 'classnames'\r\n\r\nclass Grid extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        const ogiven = Array(81).fill(null); //fill this with elliot's numbers\r\n        ogiven[1] = 8;  \r\n        this.state = {\r\n            squares: Array(81).fill(null),\r\n            given: ogiven,\r\n        };\r\n    }\r\n\r\n\r\n    handleKeyPress = (event) => {\r\n        const re = /^[0-9\\b]+$/;\r\n        if(re.test(event.key)){\r\n            const squares = this.state.squares.slice();\r\n            squares[0] = \"valid\";\r\n            this.setState({squares: squares,\r\n            });\r\n        }\r\n        else{\r\n           console.log(\"no\");\r\n        }\r\n    }\r\n\r\n    getInputValue = (event)=>{\r\n      //let the input field change only if it's being changed to a number 0-9\r\n      const re = /^[0-9]$/;\r\n      //const back = /\"\"/;\r\n      //const re = /^[^a-zA-z!@#$%^&*()_=+`~]$/;\r\n      const index = parseInt(event.target.name);\r\n      const input = event.target.value;\r\n      let validSpot = (this.state.given[index] === null);\r\n      //console.log(this.state.given[1]);\r\n      if(re.test(input) && validSpot){\r\n        const squares = this.state.squares.slice();\r\n        squares[index] = input;\r\n        this.setState({squares: squares,\r\n        });\r\n      }\r\n      else{\r\n        //flash a warning maybe?\r\n        event.target.value = this.state.squares[event.target.name];\r\n      }\r\n    };\r\n\r\n    renderRow(i){\r\n      const row = [];\r\n      let numSquares = 9;\r\n      for(let c=i; c<i+9; c++){\r\n        var liClasses = classNames({\r\n            'one': true,\r\n            'top': i===0 || i===3*numSquares || i===6*numSquares,\r\n            'bot': i===(numSquares-1)*numSquares,\r\n            'lside': c===0 || c%numSquares===0 || c%numSquares===3 || c%numSquares===6,\r\n            'rside': c%(numSquares)===(numSquares-1),\r\n            'given': this.state.given[c] != null,\r\n        });\r\n        row.push(<input type=\"text\" className={liClasses} name={c} value={this.state.given[c]} onChange={this.getInputValue} />);\r\n      }\r\n      return row;\r\n    }\r\n    renderGrid(){\r\n      const grid = [];\r\n      for(let c=0; c<9; c++){\r\n        grid.push(<div className=\"board-row\"></div>);\r\n        grid.push(this.renderRow(9*c));\r\n      }\r\n      return grid;\r\n    }\r\n    \r\n    render() {\r\n        let status = 'Now Playing - Sudokle'\r\n\r\n      return (\r\n        <div>\r\n          <div className=\"status\">{status}</div>\r\n          {this.renderGrid()}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\nclass SudokuGrid extends React.Component {\r\n    render() {\r\n      return (\r\n        <div className=\"game\">\r\n          <div className=\"game-board\">\r\n            <Grid/>\r\n          </div>\r\n          <div className=\"game-info\">\r\n            <div>{/* status */}</div>\r\n            <ol>{/* TODO */}</ol>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  // ========================================\r\n  \r\n export default SudokuGrid;"],"mappings":"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"},"metadata":{},"sourceType":"module"}